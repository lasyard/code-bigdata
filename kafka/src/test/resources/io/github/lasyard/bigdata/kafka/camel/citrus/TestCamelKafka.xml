<!--
  ~ Copyright 2020 lasyard@github.com
  ~
  ~ Licensed under the Apache License, Version 2.0 (the "License");
  ~ you may not use this file except in compliance with the License.
  ~ You may obtain a copy of the License at
  ~
  ~     http://www.apache.org/licenses/LICENSE-2.0
  ~
  ~ Unless required by applicable law or agreed to in writing, software
  ~ distributed under the License is distributed on an "AS IS" BASIS,
  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  ~ See the License for the specific language governing permissions and
  ~ limitations under the License.
  -->

<spring:beans xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
              xmlns:spring="http://www.springframework.org/schema/beans"
              xmlns:context="http://www.springframework.org/schema/context"
              xmlns="http://www.citrusframework.org/schema/testcase"
              xsi:schemaLocation="http://www.springframework.org/schema/beans
              http://www.springframework.org/schema/beans/spring-beans.xsd
              http://www.springframework.org/schema/context
              http://www.springframework.org/schema/context/spring-context.xsd
              http://www.citrusframework.org/schema/testcase
              http://www.citrusframework.org/schema/testcase/citrus-testcase.xsd">

    <context:property-placeholder location="classpath:kafka.properties"/>

    <spring:bean id="stopCamel" class="io.github.lasyard.bigdata.kafka.camel.citrus.StopContextAction">
        <spring:constructor-arg>
            <spring:ref bean="kafkaTest"/>
        </spring:constructor-arg>
    </spring:bean>

    <spring:bean id="deleteTopic" class="io.github.lasyard.bigdata.kafka.citrus.DeleteTopicAction">
        <spring:constructor-arg value="${bootstrap.servers}"/>
        <spring:property name="topics">
            <spring:list>
                <spring:value>test-citrus-camel-kafka</spring:value>
            </spring:list>
        </spring:property>
    </spring:bean>

    <testcase name="TestCamelKafka">
        <description>Test write/read kafka, using camel.</description>
        <actions>
            <echo>
                <message>### Send to a direct endpoint, then route to kafka. ###</message>
            </echo>
            <sleep seconds="3"/>
            <send endpoint="writeKafka">
                <message type="plaintext">
                    <data>Write to writeKafka</data>
                </message>
                <header>
                    <element name="kafka.KEY" value="test"/>
                    <element name="kafka.PARTITION_KEY" value="0"/>
                </header>
            </send>
            <receive endpoint="readKafka" timeout="5000">
                <message type="plaintext">
                    <data>Write to writeKafka</data>
                </message>
                <header>
                    <element name="kafka.PARTITION" value="0"/>
                </header>
            </receive>
            <echo>
                <message>### Send to kafka directly. ###</message>
            </echo>
            <send endpoint="kafka">
                <message type="plaintext">
                    <data>Write to kafka</data>
                </message>
                <header>
                    <element name="kafka.KEY" value="test"/>
                    <element name="kafka.PARTITION_KEY" value="0"/>
                </header>
            </send>
            <receive endpoint="readKafka" timeout="5000">
                <message type="plaintext">
                    <data>Write to kafka</data>
                </message>
                <header>
                    <element name="kafka.PARTITION" value="0"/>
                </header>
            </receive>
        </actions>
    </testcase>

</spring:beans>
